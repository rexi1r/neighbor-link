#!/bin/sh /etc/rc.common
# Example script
# Copyright (C) 2007 OpenWrt.org

USE_PROCD=1

START=90
STOP=90
LOGFILE="/var/log/chisel.log"
# PROCESS_LOG="/var/log/chisel_process.log"
CHISEL_BIN="/usr/bin/chisel"
[ -x "$CHISEL_BIN" ] || CHISEL_BIN="/tmp/chisel"

#init_process_log() {
#    [ -f "$PROCESS_LOG" ] || { touch "$PROCESS_LOG" && chmod 600 "$PROCESS_LOG"; }
#    if [ $(stat -c%s "$PROCESS_LOG" 2>/dev/null || echo 0) -gt 1000000 ]; then
#        mv "$PROCESS_LOG" "$PROCESS_LOG.1" 2>/dev/null
#        touch "$PROCESS_LOG" && chmod 600 "$PROCESS_LOG"
#    fi
#}

#log_msg() {
#    init_process_log
#    echo "$(date '+%Y-%m-%d %H:%M:%S') $1" >> "$PROCESS_LOG"
#}

start_service() {

    # log_msg "Checking chisel service configuration"
    # Retrieve configuration from UCI
    ENABLED=$(uci get routro.ireach.enabled)
        if [ "$ENABLED" == "0" ];then
                echo "Connect -  Service is disabled." >> $LOGFILE
                # log_msg "Service is disabled"
                exit 0
        fi

    key=$(uci get routro.ireach.user)
    port=$(uci get routro.ireach.port)
    host=$(uci get routro.ireach.host)
    proxyport=$(uci get routro.ireach.proxyport)
    password=$(uci get routro.ireach.pass)

    # Check if all required configuration parameters are present
    if [ -z "$key" ] || [ -z "$port" ] || [ -z "$host" ] || [ -z "$proxyport" ] || [ -z "$password" ]; then
        echo "chisel_status=MISSING_CONFIG" > /tmp/chisel_status
        echo "Service is not ready. Missing configuration."
        # log_msg "Missing configuration, aborting start"
        exit 0
    fi

    # log_msg "Starting chisel service"
    # Initialize procd instance
    procd_open_instance

    # Redirect output to a log file using /bin/sh -c
    procd_set_param command /bin/sh -c "$CHISEL_BIN client --auth $key:$password ${host}:${port} R:0.0.0.0:$proxyport:127.0.0.1:8888 >> $LOGFILE 2>&1"
    
    # Enable respawn if needed
    procd_set_param respawn

    # Close the procd instance
    procd_close_instance
    # log_msg "chisel service started"
}

stop() {
    echo "Connect - Stopping chisel service" >> $LOGFILE
    # log_msg "Stopping chisel service"
    # Commands to stop/kill the application
    # killall chisel 2>/dev/null
}
